using UnityEngine;

//From https://github.com/CyberCRI/RedMetrics/blob/master/API.md
public abstract class TrackingEventData
{

    /* RedMetrics API
    
    userTime - Date sent by the game (optional)

    serverTime - Date generated by the server

    type - String

    customData - Any data structure. For "gain" and “lose” events, specifies the number of things are gained or lost.
    
   */

    //optional
    //date in ISO 8601 format
    public string userTime;
    //managed by RedMetrics server
    //Time serverTime;
    protected TrackingEvent innerEventType = TrackingEvent.DEFAULT;
    // set to public for json
    public string type = TrackingEvent.DEFAULT.ToString();
    //optional
    protected CustomData innerCustomData;
    // set to public for json
    public string customData;

    public void setEventType(string _eventType)
    {
        //internalTrackingEvent = TrackingEvent.DEFAULT;
        bool isSet = false;
        foreach (TrackingEvent _trackingEvent in System.Enum.GetValues(typeof(TrackingEvent)))
        {
            if (_trackingEvent.ToString() == _eventType)
            {
                innerEventType = _trackingEvent;
                type = _eventType;
                isSet = true;
                break;
            }
        }
        if (!isSet || (innerEventType == TrackingEvent.DEFAULT))
        {
            Debug.LogWarning("Issue with tracking event: '" + _eventType + "'");
        }
    }

    public void setEventType(TrackingEvent _eventType)
    {
        innerEventType = _eventType;
        type = innerEventType.ToString();
    }

    public void setCustomData(CustomData _customData)
    {
        innerCustomData = _customData;
        customData = (null == _customData || 0 == _customData.Count) ? "" : _customData.ToJSONString();
    }

    public void mergeCustomData(CustomData _customData)
    {
        setCustomData(CustomData.merge(innerCustomData, _customData));
    }

    public TrackingEvent getEventType()
    {
        return innerEventType;
    }

    public TrackingEventData()
    {
    }

    public TrackingEventData(
        TrackingEvent _trackingEvent,
        CustomData _customData = null,
        string _userTime = null
    )
    {
        //cf http://stackoverflow.com/questions/114983/given-a-datetime-object-how-do-i-get-a-iso-8601-date-in-string-format/115002#115002
        userTime = string.IsNullOrEmpty(_userTime) ? System.DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss.fffZ", System.Globalization.CultureInfo.InvariantCulture) : _userTime;

        setEventType(_trackingEvent);
        setCustomData(_customData);
    }

    public TrackingEventData(
        TrackingEventData data
    ) : this(data.innerEventType, data.innerCustomData, data.userTime)
    {
    }

    public override string ToString()
    {
        return string.Format("[TrackingEventData: userTime:{0}, type:{1}, customData:{2}]"
                          , userTime
                          , type
                          , customData
        );
    }
}
